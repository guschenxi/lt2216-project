(this["webpackJsonplt2216-project"]=this["webpackJsonplt2216-project"]||[]).push([[0],{26:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return parse}));var _srgs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(9);function LOG(t){}function clone(t){if(null==t||"object"!=typeof t)return t;var e=new t.constructor;for(var i in t)e[i]=clone(t[i]);return e}function isEmpty(t){for(var e in t)if(t.hasOwnProperty(e))return!1;return!0}function Chart(t){this.numberOfWords=t,this.passives=new Array(t),this.actives=new Array(t);for(var e=0;e<=t;e++)this.passives[e]={},this.actives[e]={};this.add=function(t){var e,i;return t.isPassive?(e=this.passives[t.start],i=t.lhs):(e=this.actives[t.end],i=t.next.content),i in e||(e[i]={}),!(t in e[i])&&(e[i][t]=t,!0)},this.resultsForRule=function(e,i,n){i=i||0,n=n||t;var o=[],a=this.passives[i][e];for(var r in a)a[r].end==n&&o.push(a[r].out);return o},this.allEdges=function(){return this.allPassiveEdges().concat(this.allActiveEdges())},this.allPassiveEdges=function(){var t=[];for(var e in this.passives)for(var i in this.passives[e])for(var n in this.passives[e][i])t.push(this.passives[e][i][n]);return t},this.allActiveEdges=function(){var t=[];for(var e in this.actives)for(var i in this.actives[e])for(var n in this.actives[e][i])t.push(this.actives[e][i][n]);return t},this.statistics=function(){var t=this.allPassiveEdges().length,e=this.allActiveEdges().length;return{nrEdges:t+e,nrPassiveEdges:t,nrActiveEdges:e}}}function PassiveEdge(t,e,i,n){this.start=t,this.end=e,this.lhs=i,this.out=n,this.isPassive=!0;var o="["+t+"-"+e+"] $"+i+" := "+n;this._string=o,this.toString=function(){return this._string}}function ActiveEdge(t,e,i,n,o,a,r,m){this.start=t,this.end=e,this.lhs=i,this.next=n,this.rest=o,this.out=a,this.rules=r,this.text=m,this.isPassive=!1;var s="<"+t+"-"+e+"> $"+i+" -> "+n+", "+o+" := "+a+" <- "+r;this._string=s,this.toString=function(){return this._string}}function parse(words,grammar,root,filter){root||(root=grammar.$root);var chart=new Chart(words.length),agenda=[],leftCornerFilter;function addToChart(inference,start,end,lhs,rhs,out,rules,text){var edge;if(rhs.length>0){var next=rhs[0],rest=rhs.slice(1);switch(next.constructor){case Array:return void addToChart(inference+",SEQUENCE",start,end,lhs,next.concat(rest),out,rules,text);case _srgs__WEBPACK_IMPORTED_MODULE_0__.g:var min=next.min,max=next.max;if(min<=0&&addToChart(inference+",SKIP",start,end,lhs,rest,out,rules,text),max>0){var content=next.content,rhs=1==max?[content]:[content,_srgs__WEBPACK_IMPORTED_MODULE_0__.f(min?min-1:min,max-1,content)];addToChart(inference+",REPEAT",start,end,lhs,rhs.concat(rest),out,rules,text)}return;case _srgs__WEBPACK_IMPORTED_MODULE_0__.c:var oneof=next.content;for(var i in oneof){var rhs=oneof[i].concat(rest);addToChart(inference+",ONEOF",start,end,lhs,rhs,out,rules,text)}return;case _srgs__WEBPACK_IMPORTED_MODULE_0__.i:return out=clone(out),rules=clone(rules),eval(next.content),void addToChart(inference+",TAG",start,end,lhs,rest,out,rules,text)}edge=new ActiveEdge(start,end,lhs,next,rest,out,rules,text)}else edge=new PassiveEdge(start,end,lhs,out);chart.add(edge)&&(LOG("+ "+inference+": "+edge),agenda.push(edge))}for(leftCornerFilter=void 0==filter?function(){return!0}:function(t,e){var i=filter[t];return!i||words[e]in i},addToChart("INIT",0,0,root,grammar[root],{},{},{});agenda.length>0;){var edge=agenda.pop(),start=edge.start,end=edge.end,lhs=edge.lhs,next=edge.next;if(LOG(edge),edge.isPassive){var actives=chart.actives[start][lhs];for(var i in actives){var active=actives[i],rules=clone(active.rules),text=active.text;text[edge.lhs]=words.slice(start,end).join(" "),"object"==typeof edge.out&&isEmpty(edge.out)?rules[edge.lhs]=text[edge.lhs]:rules[edge.lhs]=clone(edge.out),addToChart("COMBINE",active.start,end,active.lhs,active.rest,active.out,rules,text)}}else if(next.constructor==_srgs__WEBPACK_IMPORTED_MODULE_0__.e){var ref=next.content,passives=chart.passives[end][ref];for(var i in passives){var passive=passives[i],rules=clone(edge.rules),text=edge.text;rules[passive.lhs]=clone(passive.out),text[passive.lhs]=passive.text,addToChart("COMBINE",start,passive.end,lhs,edge.rest,edge.out,rules,text)}ref in grammar&&leftCornerFilter(ref,end)&&addToChart("PREDICT",end,end,ref,grammar[ref],{},{},{})}else next==words[end]&&addToChart("SCAN",start,end+1,lhs,edge.rest,edge.out,edge.rules,edge.text)}return chart}},31:function(t,e,i){},42:function(t,e,i){"use strict";i.r(e);var n=i(18),o=i(13),a=(i(31),i(7),i(25)),r=i(2),m=i(22),s=i(46),u=i(45),c=i(11),g=i(9);function l(t){for(var e=function(t){if("undefined"!=typeof DOMParser)return(new DOMParser).parseFromString(t,"application/xml");if("undefined"!=typeof ActiveXObject){var e=XML.newDocument();return e.loadXML(t),e}var i="data:text/xml;charset=utf-8,"+encodeURIComponent(t),n=new XMLHttpRequest;return n.open("GET",i,!1),n.send(null),n.responseXML}(t),i=e.getElementsByTagName("grammar")[0].getAttribute("root"),n=new g.a(i),o=e.getElementsByTagName("rule"),a=0;a<o.length;a++){var r=o[a];n[r.getAttribute("id")]=d(r)}return n}function d(t){for(var e=t.childNodes,i=[],n=0;n<e.length;n++)if(3==e[n].nodeType){var o=e[n].textContent.trim();""!=o&&i.push(o.split(/ +/))}else if(1==e[n].nodeType)if("token"==e[n].nodeName)i.push(g.h(e[n].textContent));else if("ruleref"==e[n].nodeName){var a=e[n].getAttribute("uri");i.push(g.d(a.slice(1)))}else if("tag"==e[n].nodeName)i.push(g.h(e[n].textContent.trim()));else if("one-of"==e[n].nodeName)i.push(g.b(d(e[n])));else if("item"==e[n].nodeName){var r=e[n].getAttribute("repeat");if(r){var m=r.split("-"),s=parseInt(m[0]),u=parseInt(m[1]);u=u||1/0,i.push(g.f(s,u,d(e[n])))}else i.push(d(e[n]))}else console.log(e[n]);return i}var f=i(26);const h={Em:"Emmaboda",Kac:"Kalmar",Ck:"Karlskrona",Nyb:"Nybro",M:"Malm\xf6","V\xf6":"V\xe4xj\xf6",Hm:"H\xe4ssleholm",Hvp:"Hovmantorp",G:"G\xf6teborg",Av:"Alvesta",Cst:"Stockholm",Sdy:"Smedby",Tre:"Trekanten",Sdy:"Smedby",Vfa:"Vissefj\xe4rda","Hm\xf6":"Holmsj\xf6","\xd6rs":"\xd6rsj\xf6","B\xe5a":"Berg\xe5sa",Lo:"Lessebo"},v=c.a.send,p=c.a.cancel,E="f16eb462dbdb435a8f3c22829c0e13bf",b=l("\n<grammar root=\"final\">\n   <rule id=\"final\">\n      <tag> out = new Object();  </tag>\n      <one-of>\n         <item>\n             <one-of>\n               <item><ruleref uri=\"#time\"/> <tag> out.time = rules.time; </tag></item>\n               <item><ruleref uri=\"#date\"/> <tag> out.date = rules.date; </tag></item>\n               <item><ruleref uri=\"#from\"/> <tag> out.from = rules.from; </tag></item>\n               <item><ruleref uri=\"#to\"/> <tag> out.to = rules.to; </tag></item>\n             </one-of>\n         </item>\n         <item><tag>out.order = \"asc\";</tag>\n            <ruleref uri=\"#QuestionWord\"/><ruleref uri=\"#verb\"/>\n            <item repeat = \"0-1\">f\xf6rsta</item><ruleref uri=\"#trainWord\"/>\n            <item repeat=\"0-4\">\n               <one-of>\n                  <item><ruleref uri=\"#time\"/> <tag> out.time = rules.time; </tag></item>\n                  <item><ruleref uri=\"#date\"/> <tag> out.date = rules.date; </tag></item>\n                  <item><ruleref uri=\"#from\"/> <tag> out.from = rules.from; </tag></item>\n                  <item><ruleref uri=\"#to\"/> <tag> out.to = rules.to; </tag></item>\n                  <item><ruleref uri=\"#fromto\"/><tag>out.from = rules.fromto.from; out.to = rules.fromto.to; </tag></item>\n               </one-of>\n            </item>\n         </item>\n         <item><tag>out.order = \"asc\";</tag>\n            <ruleref uri=\"#QuestionWord\"/><ruleref uri=\"#verb\"/>\n            <item>n\xe4sta</item><ruleref uri=\"#trainWord\"/>\n            <tag> out.time = 'NOW'; </tag><tag> out.date = 'today'; </tag>\n            <item repeat=\"0-2\"><one-of>\n               <item><ruleref uri=\"#from\"/> <tag> out.from = rules.from; </tag></item>\n               <item><ruleref uri=\"#to\"/> <tag> out.to = rules.to; </tag></item>\n               <item><ruleref uri=\"#fromto\"/><tag>out.from = rules.fromto.from; out.to = rules.fromto.to; </tag></item>\n            </one-of></item>\n         </item>\n         <item>\n            <ruleref uri=\"#QuestionWord\"/><ruleref uri=\"#verb\"/>\n            <ruleref uri=\"#which\"/><tag> out.time = rules.which.time; out.order = rules.which.order</tag>\n            <ruleref uri=\"#trainWord\"/>\n            <item repeat=\"0-3\"><one-of>\n               <item><ruleref uri=\"#date\"/> <tag> out.date = rules.date; </tag></item>\n               <item><ruleref uri=\"#from\"/> <tag> out.from = rules.from; </tag></item>\n               <item><ruleref uri=\"#to\"/> <tag> out.to = rules.to; </tag></item>\n               <item><ruleref uri=\"#fromto\"/><tag>out.from = rules.fromto.from; out.to = rules.fromto.to; </tag></item>\n            </one-of></item>\n         </item>\n         \n      </one-of>\n   </rule>\n\n   <rule id=\"trainWord\">\n      <item repeat = \"0-1\">\n         <one-of>\n            <item> t\xe5g </item>\n            <item> t\xe5get </item>\n            <item> t\xe5gen </item>\n         </one-of>\n      </item>\n   </rule>\n\n   <rule id=\"verb\">\n      <item repeat = \"0-1\">\n         <one-of>\n            <item> k\xf6r </item>\n            <item> g\xe5r </item>\n            <item> \xe4r </item>\n         </one-of>\n      </item>\n   </rule>\n\n   <rule id=\"QuestionWord\">\n      <item repeat = \"0-1\">\n         <one-of>\n            <item> N\xe4r </item>\n            <item> Vilken tid </item>\n            <item> Hur dags </item>\n         </one-of>\n      </item>\n   </rule>\n\n   <rule id=\"which\">\n      <one-of>\n         <item><one-of><item> f\xf6rsta </item><item> F\xf6rsta </item></one-of> <tag> out.time = '00:00'; out.order = \"asc\"; </tag></item>\n         <item><one-of><item> sista </item><item> Sista </item></one-of><tag> out.time = '00:00'; out.order = \"desc\"; </tag></item>\n         <item> det f\xf6rsta <tag> out.time = '00:00'; out.order = \"asc\"; </tag></item>\n         <item> det sista <tag> out.time = '00:00'; out.order = \"desc\"; </tag></item>\n         <item> den f\xf6rsta <tag> out.time = '00:00'; out.order = \"asc\"; </tag></item>\n         <item> den sista <tag> out.time = '00:00'; out.order = \"desc\"; </tag></item>\n         <item> de f\xf6rsta <tag> out.time = '00:00'; out.order = \"asc\"; </tag></item>\n         <item> de sista <tag> out.time = '00:00'; out.order = \"desc\"; </tag></item>\n      </one-of>\n   </rule>\n   <rule id=\"fromto\">\n      <item repeat=\"0-1\">fr\xe5n</item><ruleref uri=\"#station\"/> <tag> out.from = rules.station; </tag>\n      <item repeat=\"0-1\"><one-of><item>till</item><item>mot</item></one-of></item>\n      <ruleref uri=\"#station\"/> <tag> out.to = rules.station; </tag>\n   </rule>\n   <rule id=\"from\">\n      <item>fr\xe5n</item><ruleref uri=\"#station\"/> <tag> out = rules.station; </tag>\n   </rule>\n   <rule id=\"to\">\n      <one-of><item>till</item><item>mot</item></one-of>\n      <ruleref uri=\"#station\"/> <tag> out = rules.station; </tag>\n   </rule>\n\n   <rule id=\"station\">\n      <one-of>\n         <item> Emmaboda <tag> out = 'Em'; </tag></item>\n         <item> Kalmar <tag> out = 'Kac'; </tag></item>\n         <item> Karlskrona <tag> out = 'Ck'; </tag></item>\n         <item> Holmsj\xf6 <tag> out = 'Hm\xf6'; </tag></item>\n         <item> Berg\xe5sa <tag> out = 'B\xe5a'; </tag></item>\n         <item> Vissefj\xe4rda <tag> out = 'Vfa'; </tag></item>\n         <item> \xd6rsj\xf6 <tag> out = '\xd6rs'; </tag></item>\n         <item> Nybro <tag> out = 'Nyb'; </tag></item>\n         <item> Trekanten <tag> out = 'Tre'; </tag></item>\n         <item> Smedby <tag> out = 'Sdy'; </tag></item>\n         <item> Malm\xf6 <tag> out = 'M'; </tag></item>\n         <item> V\xe4xj\xf6 <tag> out = 'V\xf6'; </tag></item>\n         <item> H\xe4ssleholm <tag> out = 'Hm'; </tag></item>\n         <item> Hovmantorp <tag> out = 'Hvp'; </tag></item>\n         <item> Lessebo <tag> out = 'Lo'; </tag></item>\n         <item> G\xf6teborg <tag> out = 'G'; </tag></item>\n         <item> Alvesta <tag> out = 'Av'; </tag></item>\n         <item> Stockholm <tag> out = 'Cst'; </tag></item>\n      </one-of>\n      <item repeat = \"0-1\">\n          <one-of>\n             <item>station</item> <item>Station</item>\n             <item>centralstation</item> <item>Centralstation</item>\n             <item>C</item> <item>c</item> <item>central</item>\n             <item>stationen</item> <item>Stationen</item>\n             <item>centralstationen</item> <item>Centralstationen</item>\n          </one-of>\n      </item>\n   </rule>\n\n   <rule id=\"time\">\n\t   <item repeat=\"0-1\"> efter </item> <item repeat=\"0-1\"> klockan </item>\n\t   <one-of>\n\t     <item> nu <tag> out = \"NOW\"; </tag></item>\n\t     <item> now <tag> out = \"NOW\"; </tag></item>\n\t\t <item><ruleref uri=\"#hour\"/><tag>out = rules.hour+\":00\"</tag></item>\n\t\t <item><ruleref uri=\"#hour\"/>.<ruleref uri=\"#minute\"/><tag>out = rules.hour+\":\"+rules.minute;</tag></item>\n\t\t <item><ruleref uri=\"#hour\"/>och<ruleref uri=\"#minute\"/><tag>out.hour = rules.hour; out.minute = rules.minute;</tag></item>\n\t\t <item><ruleref uri=\"#minute\"/> \xf6ver <ruleref uri=\"#hour\"/><tag>out = rules.hour+\":\"+rules.minute; </tag></item>\n\t\t <item><ruleref uri=\"#minute\"/> i <ruleref uri=\"#hour\"/><tag>out = (\"0\"+(rules.hour - 1)).slice(-2)+\":\"+(\"0\"+(60 - rules.minute)).slice(-2); </tag></item>\n\t\t <item> halv <ruleref uri=\"#hour\"/><tag>out = (\"0\"+(rules.hour-1)).slice(-2) +\":30\"; </tag></item>\n\t\t <item> kvart i <ruleref uri=\"#hour\"/><tag>out = (\"0\"+(rules.hour-1)).slice(-2) +\":45\"; </tag></item>\n\t\t <item> kvart \xf6ver <ruleref uri=\"#hour\"/><tag>out = (\"0\"+rules.hour).slice(-2) +\":15\"; </tag></item>\n\t  </one-of>\n   </rule>\n   \n   <rule id=\"minute\">\n      <one-of>\n         <item><one-of><item>00</item><item>0</item><item>noll</item></one-of> <tag> out = '00'; </tag></item>\n         <item><one-of><item>01</item><item>1</item><item>ett</item></one-of> <tag> out = '01'; </tag></item>\n         <item><one-of><item>02</item><item>2</item><item>tv\xe5</item></one-of> <tag> out = '02'; </tag></item>\n         <item><one-of><item>03</item><item>3</item><item>tre</item></one-of> <tag> out = '03'; </tag></item>\n         <item><one-of><item>04</item><item>4</item><item>fyra</item></one-of> <tag> out = '04'; </tag></item>\n         <item><one-of><item>05</item><item>5</item><item>fem</item></one-of> <tag> out = '05'; </tag></item>\n         <item><one-of><item>06</item><item>6</item><item>sex</item></one-of> <tag> out = '06'; </tag></item>\n         <item><one-of><item>07</item><item>7</item><item>sju</item></one-of> <tag> out = '07'; </tag></item>\n         <item><one-of><item>08</item><item>8</item><item>\xe5tta</item></one-of> <tag> out = '08'; </tag></item>\n         <item><one-of><item>09</item><item>9</item><item>nio</item></one-of> <tag> out = '09'; </tag></item>\n         <item><one-of><item>10</item><item>tio</item></one-of><tag> out = '10'; </tag></item>\n         <item>11 <tag> out = '11'; </tag></item>\n         <item>12 <tag> out = '12'; </tag></item>\n         <item>13 <tag> out = '13'; </tag></item>\n         <item>14 <tag> out = '14'; </tag></item>\n         <item>15 <tag> out = '15'; </tag></item>\n         <item>16 <tag> out = '16'; </tag></item>\n         <item>17 <tag> out = '17'; </tag></item>\n         <item>18 <tag> out = '18'; </tag></item>\n         <item>19 <tag> out = '19'; </tag></item>\n         <item>20 <tag> out = '20'; </tag></item>\n         <item>21 <tag> out = '21'; </tag></item>\n         <item>22 <tag> out = '22'; </tag></item>\n         <item>23 <tag> out = '23'; </tag></item>\n         <item>24 <tag> out = '24'; </tag></item>\n         <item>25 <tag> out = '25'; </tag></item>\n         <item>26 <tag> out = '26'; </tag></item>\n         <item>27 <tag> out = '27'; </tag></item>\n         <item>28 <tag> out = '28'; </tag></item>\n         <item>29 <tag> out = '29'; </tag></item>\n         <item>30 <tag> out = '30'; </tag></item>\n         <item>31 <tag> out = '31'; </tag></item>\n         <item>32 <tag> out = '32'; </tag></item>\n         <item>33 <tag> out = '33'; </tag></item>\n         <item>34 <tag> out = '34'; </tag></item>\n         <item>35 <tag> out = '35'; </tag></item>\n         <item>36 <tag> out = '36'; </tag></item>\n         <item>37 <tag> out = '37'; </tag></item>\n         <item>38 <tag> out = '38'; </tag></item>\n         <item>39 <tag> out = '39'; </tag></item>\n         <item>40 <tag> out = '40'; </tag></item>\n         <item>41 <tag> out = '41'; </tag></item>\n         <item>42 <tag> out = '42'; </tag></item>\n         <item>43 <tag> out = '43'; </tag></item>\n         <item>44 <tag> out = '44'; </tag></item>\n         <item>45 <tag> out = '45'; </tag></item>\n         <item>46 <tag> out = '46'; </tag></item>\n         <item>47 <tag> out = '47'; </tag></item>\n         <item>48 <tag> out = '48'; </tag></item>\n         <item>49 <tag> out = '49'; </tag></item>\n         <item>50 <tag> out = '50'; </tag></item>\n         <item>51 <tag> out = '51'; </tag></item>\n         <item>52 <tag> out = '52'; </tag></item>\n         <item>53 <tag> out = '53'; </tag></item>\n         <item>54 <tag> out = '54'; </tag></item>\n         <item>55 <tag> out = '55'; </tag></item>\n         <item>56 <tag> out = '56'; </tag></item>\n         <item>57 <tag> out = '57'; </tag></item>\n         <item>58 <tag> out = '58'; </tag></item>\n         <item>59 <tag> out = '59'; </tag></item>\n         <item>60 <tag> out = '60'; </tag></item>\n      </one-of>\n   </rule>\n   <rule id=\"hour\">\n      <one-of>\n         <item><one-of><item>00</item><item>0</item><item>noll</item></one-of> <tag> out = '01'; </tag></item>\n         <item><one-of><item>01</item><item>1</item><item>ett</item></one-of> <tag> out = '01'; </tag></item>\n         <item><one-of><item>02</item><item>2</item><item>tv\xe5</item></one-of> <tag> out = '02'; </tag></item>\n         <item><one-of><item>03</item><item>3</item><item>tre</item></one-of> <tag> out = '03'; </tag></item>\n         <item><one-of><item>04</item><item>4</item><item>fyra</item></one-of> <tag> out = '04'; </tag></item>\n         <item><one-of><item>05</item><item>5</item><item>fem</item></one-of> <tag> out = '05'; </tag></item>\n         <item><one-of><item>06</item><item>6</item><item>sex</item></one-of> <tag> out = '06'; </tag></item>\n         <item><one-of><item>07</item><item>7</item><item>sju</item></one-of> <tag> out = '07'; </tag></item>\n         <item><one-of><item>08</item><item>8</item><item>\xe5tta</item></one-of> <tag> out = '08'; </tag></item>\n         <item><one-of><item>09</item><item>9</item><item>nio</item></one-of> <tag> out = '09'; </tag></item>\n         <item><one-of><item>10</item><item>tio</item></one-of><tag> out = '10'; </tag></item>\n         <item>11 <tag> out = '11'; </tag></item>\n         <item>12 <tag> out = '12'; </tag></item>\n         <item>13 <tag> out = '13'; </tag></item>\n         <item>14 <tag> out = '14'; </tag></item>\n         <item>15 <tag> out = '15'; </tag></item>\n         <item>16 <tag> out = '16'; </tag></item>\n         <item>17 <tag> out = '17'; </tag></item>\n         <item>18 <tag> out = '18'; </tag></item>\n         <item>19 <tag> out = '19'; </tag></item>\n         <item>20 <tag> out = '20'; </tag></item>\n         <item>21 <tag> out = '21'; </tag></item>\n         <item>22 <tag> out = '22'; </tag></item>\n         <item>23 <tag> out = '23'; </tag></item>\n         <item>24 <tag> out = '24'; </tag></item>\n      </one-of>\n   </rule>\n\n   <rule id=\"date\">\n         <one-of>\n            <item> idag <tag> out = 'today'; </tag></item>\n            <item> imorgon <tag> out = 'tomorrow'; </tag></item>\n            <item> today <tag> out = 'today'; </tag></item>\n            <item> tomorrow <tag> out = 'tomorrow'; </tag></item>\n            <item> \n               <item repeat=\"0-1\"> den </item><ruleref uri=\"#day\"/><ruleref uri=\"#month\"/>\n               <tag> out = '2021-'+ rules.month + '-' + rules.day ; </tag>\n            </item>\n         </one-of>\n   </rule>\n\n   <rule id=\"day\">\n      <one-of>\n         <item><one-of><item>01</item><item>1</item></one-of> <tag> out = '01'; </tag></item>\n         <item><one-of><item>02</item><item>2</item></one-of> <tag> out = '02'; </tag></item>\n         <item><one-of><item>03</item><item>3</item></one-of> <tag> out = '03'; </tag></item>\n         <item><one-of><item>04</item><item>4</item></one-of> <tag> out = '04'; </tag></item>\n         <item><one-of><item>05</item><item>5</item></one-of> <tag> out = '05'; </tag></item>\n         <item><one-of><item>06</item><item>6</item></one-of> <tag> out = '06'; </tag></item>\n         <item><one-of><item>07</item><item>7</item></one-of> <tag> out = '07'; </tag></item>\n         <item><one-of><item>08</item><item>8</item></one-of> <tag> out = '08'; </tag></item>\n         <item><one-of><item>09</item><item>9</item></one-of> <tag> out = '09'; </tag></item>\n         <item>10 <tag> out = '10'; </tag></item>\n         <item>11 <tag> out = '11'; </tag></item>\n         <item>12 <tag> out = '12'; </tag></item>\n         <item>13 <tag> out = '13'; </tag></item>\n         <item>14 <tag> out = '14'; </tag></item>\n         <item>15 <tag> out = '15'; </tag></item>\n         <item>16 <tag> out = '16'; </tag></item>\n         <item>17 <tag> out = '17'; </tag></item>\n         <item>18 <tag> out = '18'; </tag></item>\n         <item>19 <tag> out = '19'; </tag></item>\n         <item>20 <tag> out = '20'; </tag></item>\n         <item>21 <tag> out = '21'; </tag></item>\n         <item>22 <tag> out = '22'; </tag></item>\n         <item>23 <tag> out = '23'; </tag></item>\n         <item>24 <tag> out = '24'; </tag></item>\n         <item>25 <tag> out = '25'; </tag></item>\n         <item>26 <tag> out = '26'; </tag></item>\n         <item>27 <tag> out = '27'; </tag></item>\n         <item>28 <tag> out = '28'; </tag></item>\n         <item>29 <tag> out = '29'; </tag></item>\n         <item>30 <tag> out = '30'; </tag></item>\n         <item>31 <tag> out = '31'; </tag></item>\n      </one-of>\n   </rule>\n\n   <rule id=\"month\">\n      <one-of>\n         <item><one-of><item>Januari</item><item>januari</item></one-of><tag> out = '01'; </tag></item>\n         <item><one-of><item>Februari</item><item>februari</item></one-of><tag> out = '02'; </tag></item>\n         <item><one-of><item>Mars</item><item>mars</item></one-of><tag> out = '03'; </tag></item>\n         <item><one-of><item>April</item><item>april</item></one-of><tag> out = '04'; </tag></item>\n         <item><one-of><item>Maj</item><item>maj</item></one-of><tag> out = '05'; </tag></item>\n         <item><one-of><item>Juni</item><item>juni</item></one-of><tag> out = '06'; </tag></item>\n         <item><one-of><item>Juli</item><item>juli</item></one-of><tag> out = '07'; </tag></item>\n         <item><one-of><item>Augusti</item><item>augusti</item></one-of><tag> out = '08'; </tag></item>\n         <item><one-of><item>September</item><item>september</item></one-of><tag> out = '09'; </tag></item>\n         <item><one-of><item>Oktober</item><item>oktober</item></one-of><tag> out = '10'; </tag></item>\n         <item><one-of><item>November</item><item>november</item></one-of><tag> out = '11'; </tag></item>\n         <item><one-of><item>December</item><item>december</item></one-of><tag> out = '12'; </tag></item>\n      </one-of>\n   </rule>\n</grammar>\n"),y=l('\n<grammar root="final">\n   <rule id="final">\n         <tag>out = new Object();</tag>\n         <item repeat="1-2">\n             <one-of>\n                <item><ruleref uri="#yes"/><tag>out.yesnoanswer = rules.yes;</tag></item>\n                <item><ruleref uri="#no"/><tag>out.yesnoanswer = rules.no;</tag></item>\n             </one-of>\n         </item>\n   </rule>\n   <rule id="yes">\n      <tag> out = true; </tag>\n      <one-of> \n         <item> yes </item>\n         <item> ja </item>\n         <item> absolut </item>\n         <item> korrekt </item>\n         <item> jajamen </item>\n         <item> Ja visst </item>\n      </one-of>\n   </rule>\n   <rule id="no">\n      <tag> out = false; </tag>\n      <one-of> \n         <item> no </item>\n         <item> nej </item>\n         <item> nix </item>\n         <item> inte </item>\n      </one-of>\n   </rule>\n</grammar>\n');function S(t,e){var i=Object(f.a)(t.split(/\s+/),e).resultsForRule(b.$root);return void 0===i[0]&&(i=[{reserve:"reserve"}]),console.log(i),i[0]}const T=["stop","start over","help","go back"];function _(t){return v((e=>({type:"SPEAK",value:t})))}function O(){return[v("LISTEN")]}const A={initial:"main_function",id:"departureMachine",type:"parallel",states:{transitions:{id:"function",on:{CHECK:[{target:"#main.overall",cond:t=>void 0===t.from&&void 0===t.to&&void 0===t.date&&void 0===t.time&&void 0===t.order},{target:"#main.from",cond:t=>void 0===t.from},{target:"#main.to",cond:t=>void 0===t.to},{target:"#main.time",cond:t=>void 0===t.time},{target:"#main.date",cond:t=>void 0===t.date},{target:"#main.final",cond:t=>void 0!==t.from&&void 0!==t.to&&void 0!==t.time&&void 0!==t.date&&void 0!==t.order}]},exit:[(t,e)=>console.log(t),p("check")]},main_function:{initial:"welcome",id:"main",on:{RECOGNISED:[{target:".stop",cond:t=>["stopp","stop","sluta"].includes(t.recResult)},{target:".startover",cond:t=>["start over","b\xf6rja om","start from the beginning","start from beginning"].includes(t.recResult)},{actions:[Object(r.b)((t=>({from:"from"in S(t.recResult.replace("."," . "),b)?S(t.recResult.replace("."," . "),b).from:t.from}))),Object(r.b)((t=>({to:"to"in S(t.recResult.replace("."," . "),b)?S(t.recResult.replace("."," . "),b).to:t.to}))),Object(r.b)((t=>({order:"order"in S(t.recResult.replace("."," . "),b)?S(t.recResult.replace("."," . "),b).order:t.order}))),Object(r.b)((t=>({time:"time"in S(t.recResult.replace("."," . "),b)?S(t.recResult.replace("."," . "),b).time:t.time}))),Object(r.b)((t=>({date:"date"in S(t.recResult.replace("."," . "),b)?S(t.recResult.replace("."," . "),b).date:t.date}))),v("CHECK")]}]},states:{startover:{entry:v((t=>({type:"SPEAK",value:"OK. Starting over"}))),on:{ENDSPEECH:"#departureMachine"},exit:[Object(r.b)((t=>({from:void 0,to:void 0,time:void 0,date:void 0,order:void 0,result:void 0,output_text:void 0,recResult:void 0}))),p("ENDSPEECH")]},stop:{entry:_("OK. Going back to the root menu."),on:{ENDSPEECH:"#root"},exit:Object(r.b)((t=>({from:void 0,to:void 0,time:void 0,date:void 0,order:void 0,result:void 0,output_text:void 0,recResult:void 0})))},welcome:{initial:"prompt",on:{ENDSPEECH:"overall"},states:{prompt:{entry:_("Hello!")}}},overall:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:"Provide some information about the departure."}))),on:{ENDSPEECH:"ask"}},ask:{entry:O()}}},from:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:"from which station?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:O()}}},to:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:" to which station? "}))),on:{ENDSPEECH:"ask"}},ask:{entry:O()}}},time:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:"After which time? "}))),on:{ENDSPEECH:"ask"}},ask:{entry:O()}}},date:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:"Which day? "}))),on:{ENDSPEECH:"ask"}},ask:{entry:O()}}},confirm:{initial:"prompt",on:{RECOGNISED:[{cond:t=>"yesnoanswer"in(S(t.recResult,y)||{}),actions:[Object(r.b)((t=>({confirm:S(t.recResult,y).yesnoanswer})))],target:".choose"},{target:".nomatch",cond:t=>!T.includes(t.recResult)}]},states:{prompt:{entry:v((t=>({type:"SPEAK",value:"Do you want to check when the train goes from ".concat(h[t.from]," to ").concat(h[t.to]," after ").concat(t.time," for ").concat(t.date," ?")}))),on:{ENDSPEECH:"ask"}},ask:{entry:v("LISTEN")},choose:{always:[{target:"#main.final",cond:t=>!0===t.confirm},{actions:[Object(r.b)((t=>({from:void 0}))),Object(r.b)((t=>({to:void 0}))),Object(r.b)((t=>({order:void 0}))),Object(r.b)((t=>({time:void 0}))),Object(r.b)((t=>({date:void 0})))],target:"#main.welcome",cond:t=>!1===t.confirm}]},nomatch:{entry:_("Sorry I don't understand. Say yes or no."),on:{ENDSPEECH:"prompt"}}}},final:{initial:"prompt",states:{prompt:{entry:_("OK. Checking."),on:{ENDSPEECH:"check"}},check:{invoke:{id:"tvrequest",src:t=>x(function(t,e,i,n,o){var a=new Date;if("NOW"===i)i=("0"+a.getHours()).slice(-2)+":"+("0"+a.getMinutes()).slice(-2);if("today"===n)n=a.getFullYear()+"-"+("0"+(a.getMonth()+1)).slice(-2)+"-"+("0"+a.getDate()).slice(-2);if("tomorrow"===n)n=a.getFullYear()+"-"+("0"+(a.getMonth()+1)).slice(-2)+"-"+("0"+(a.getDate()+1)).slice(-2);var r=n+"T"+i;console.log(r);var m=n+"T23:59:59";if("desc"==o)var s="desc";else s="asc";var u='\n\t<REQUEST>\n      <LOGIN authenticationkey="'.concat(E,'" />\n      <QUERY objecttype="TrainAnnouncement" schemaversion="1.3" orderby="AdvertisedTimeAtLocation ').concat(s,'" limit="1">\n            <FILTER>\n                  <AND>\n                        <EQ name="ActivityType" value="Avgang" />\n                        <EQ name="LocationSignature" value="').concat(t,'" />\n                        <EQ name="ToLocation.LocationName" value="').concat(e,'" />\n                        <GTE name="AdvertisedTimeAtLocation" value="').concat(r,'" />\n                        <LTE name="AdvertisedTimeAtLocation" value="').concat(m,'" />\n                  </AND>\n            </FILTER>\n            <INCLUDE>AdvertisedTrainIdent</INCLUDE>\n            <INCLUDE>AdvertisedTimeAtLocation</INCLUDE>\n            <INCLUDE>TrackAtLocation</INCLUDE>\n            <INCLUDE>LocationSignature</INCLUDE>\n            <INCLUDE>ToLocation.LocationName</INCLUDE>\n            \n      </QUERY>\n    </REQUEST>');return console.log(u),u}(t.from,t.to,t.time,t.date,t.order)),onDone:{actions:[Object(r.b)({result:(t,e)=>e.data.RESPONSE.RESULT[0]})],target:"success"},onError:{target:"failure",actions:Object(r.b)({error:(t,e)=>e.data})}}},success:{always:[{target:"#main.read_no_result",cond:t=>0==t.result.TrainAnnouncement.length},{actions:[Object(r.b)({output_text:t=>function(t){var e=t.AdvertisedTimeAtLocation,i=t.AdvertisedTrainIdent.slice(0,-4)+" "+t.AdvertisedTrainIdent.slice(-4,-2)+" "+t.AdvertisedTrainIdent.slice(-2),n=t.TrackAtLocation,o=t.LocationSignature,a=t.ToLocation[0].LocationName,r=e.slice(11,16);if("x"==n)var m="Train ".concat(i,", from ").concat(h[o]," to ").concat(h[a],", will departure at ").concat(r,", but the train is canceled.");else m="Train ".concat(i,", from ").concat(h[o]," to ").concat(h[a],", will departure at ").concat(r,", from track ").concat(n,".");return console.log(m),m}(t.result.TrainAnnouncement[0])}),Object(r.b)({temp:t=>t.result.TrainAnnouncement[0].AdvertisedTrainIdent})],target:"#main.read_result",cond:t=>0!=t.result.TrainAnnouncement.length}]},failure:{entry:_("failed to fetch data from the authority. Try again."),on:{ENDSPEECH:"#main"},exit:Object(r.b)((t=>({from:void 0,to:void 0,time:void 0,date:void 0,order:void 0,result:void 0,output_text:void 0})))}}},read_no_result:{entry:[_("Sorry, No related info has been found. Try again.")],on:{ENDSPEECH:"#main"},exit:Object(r.b)((t=>({from:void 0,to:void 0,time:void 0,date:void 0,order:void 0,result:void 0,output_text:void 0})))},read_result:{initial:"prompt",on:{RECOGNISED:[{target:".prompt",cond:t=>["en g\xe5ng till","igen","again","repeat","listen again"].includes(t.recResult.toLowerCase())},{target:".more_info",cond:t=>["mer info","mer information","more info"].includes(t.recResult.toLowerCase())},{target:".st_message",cond:t=>["stations meddelande","station announcement","announcement","meddelande"].includes(t.recResult.toLowerCase())},{actions:Object(r.b)((t=>({from:void 0,to:void 0,time:void 0,date:void 0,order:void 0,result:void 0,output_text:void 0}))),target:"#departureMachine",cond:t=>["g\xe5 tillbaka","b\xf6rja om","go back","start over"].includes(t.recResult.toLowerCase())},{target:".nomatch"}]},states:{prompt:{entry:v((t=>({type:"SPEAK",value:t.output_text}))),on:{ENDSPEECH:"do_next"}},do_next:{entry:v((t=>({type:"SPEAK",value:"Listen again? or more train infomation? stations announcement? or start over?"}))),on:{ENDSPEECH:"ask"}},ask:{entry:v("LISTEN")},nomatch:{entry:_("Listen again? or more train infomation? stations announcement? or start over?"),on:{ENDSPEECH:"ask"}},more_info:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:"checking"}))),on:{ENDSPEECH:"check"}},check:{invoke:{id:"tvrequest",src:t=>x(function(t,e,i){var n=new Date;if("NOW"===e)e=("0"+n.getHours()).slice(-2)+":"+("0"+n.getMinutes()).slice(-2);if("today"===i)i=n.getFullYear()+"-"+("0"+(n.getMonth()+1)).slice(-2)+"-"+("0"+n.getDate()).slice(-2);if("tomorrow"===i)i=n.getFullYear()+"-"+("0"+(n.getMonth()+1)).slice(-2)+"-"+("0"+(n.getDate()+1)).slice(-2);var o=i+"T"+e;console.log(o);var a=i+"T23:59:59";console.log(a);var r='\n<REQUEST>\n    <LOGIN authenticationkey="'.concat(E,'"/>\n    <QUERY objecttype="TrainAnnouncement" schemaversion="1.3" orderby="AdvertisedTimeAtLocation">\n        <FILTER>\n            <EQ name="AdvertisedTrainIdent" value="').concat(t,'" />\n            <EQ name="Advertised" value="true"/>\n            <GTE name="AdvertisedTimeAtLocation" value="').concat(o,'" />\n            <LTE name="AdvertisedTimeAtLocation" value="').concat(a,'" />\n        </FILTER>\n        <INCLUDE>AdvertisedTrainIdent</INCLUDE>\n        <INCLUDE>LocationSignature</INCLUDE>\n        <INCLUDE>AdvertisedTimeAtLocation</INCLUDE>\n  </QUERY>\n</REQUEST>');return console.log(r),r}(t.temp,t.time,t.date)),onDone:{actions:[Object(r.b)({result:(t,e)=>e.data.RESPONSE.RESULT[0]})],target:"success"},onError:{target:"failure",actions:Object(r.b)({error:(t,e)=>e.data})}}},success:{always:[{target:"#main.read_no_result",cond:t=>0==t.result.TrainAnnouncement.length},{actions:Object(r.b)({output_text:t=>function(t){for(var e=t[0].AdvertisedTrainIdent.slice(0,-4)+" "+t[0].AdvertisedTrainIdent.slice(-4,-2)+" "+t[0].AdvertisedTrainIdent.slice(-2),i=t[0].LocationSignature,o=t[0].AdvertisedTimeAtLocation.slice(11,16),a=t[t.length-1].LocationSignature,r=t[t.length-1].AdvertisedTimeAtLocation.slice(11,16),m="",s=0,u=Object.entries(t);s<u.length;s++){const e=Object(n.a)(u[s],2),i=e[0],o=e[1];0!=i&&(i%2!=0&&i!=t.length-1&&(m=m+", "+h[o.LocationSignature]))}return"\n    The train ".concat(e,", will departure from ").concat(h[i]," at ").concat(o,". calling at ").concat(m,",\n    and finally arrive at ").concat(h[a]," at ").concat(r,".\n    ")}(t.result.TrainAnnouncement)}),target:"#main.read_result",cond:t=>0!=t.result.TrainAnnouncement.length}]},failure:{entry:_("failed to fetch data from the authority. Try again."),on:{ENDSPEECH:"#main"}}}},st_message:{initial:"prompt",states:{prompt:{entry:v((t=>({type:"SPEAK",value:"checking the station's announcement"}))),on:{ENDSPEECH:"check"}},check:{invoke:{id:"tvrequest",src:t=>x(function(t){console.log(t);var e='\n<REQUEST>\n    <LOGIN authenticationkey="'.concat(E,'"/>\n      <QUERY objecttype="TrainMessage" schemaversion="1.3">\n            <FILTER>\n                  <EQ name="AffectedLocation" value="').concat(t,'" />\n            </FILTER>\n            <INCLUDE>ExternalDescription</INCLUDE>\n      </QUERY>\n</REQUEST>');return console.log(e),e}(t.from)),onDone:{actions:[Object(r.b)({result:(t,e)=>e.data.RESPONSE.RESULT[0]})],target:"success"},onError:{target:"failure",actions:Object(r.b)({error:(t,e)=>e.data})}}},success:{always:[{target:"#main.read_no_result",cond:t=>0==t.result.TrainMessage.length},{actions:Object(r.b)({output_text:t=>function(t,e){for(var i="Announcement from ".concat(h[e]," Station. \n"),o=0,a=Object.entries(t);o<a.length;o++){const t=Object(n.a)(a[o],2),e=t[0],r=t[1];i+="No.".concat(Number(e)+1,": ").concat(r.ExternalDescription.slice(0,50)," \n")}return console.log(i),i}(t.result.TrainMessage,t.from)}),target:"#main.read_result",cond:t=>0!=t.result.TrainMessage.length}]},failure:{entry:_("failed to fetch data from the authority. Try again."),on:{ENDSPEECH:"#main"}}}}}}}}}};const x=t=>fetch(new Request("https://api.trafikinfo.trafikverket.se/v2/data.json",{method:"POST",body:t})).then((t=>t.json()));var j=i(24),C=i(14);Object(u.a)({url:"https://statecharts.io/inspect",iframe:!1});const N=Object(m.a)({id:"root",type:"parallel",context:{count:0},states:{dm:{initial:"init",id:"dm",states:{init:{on:{CLICK:"dmDeparture"}},dmDeparture:Object(o.a)({},A)}},asrtts:{initial:"idle",states:{idle:{on:{LISTEN:"recognising",SPEAK:{target:"speaking",actions:Object(r.b)(((t,e)=>({ttsAgenda:e.value})))}}},recognising:{entry:"recStart",exit:"recStop",on:{ASRRESULT:{actions:["recLogResult",Object(r.b)(((t,e)=>({recResult:e.value})))],target:".match"},RECOGNISED:{actions:Object(r.b)((t=>({count:0}))),target:"idle"}},states:{match:{entry:Object(r.q)("RECOGNISED")}}},speaking:{entry:"ttsStart",on:{ENDSPEECH:"idle"}}}}}},{actions:{recLogResult:t=>{console.log("<< ASR: "+t.recResult)},test:()=>{console.log("test")},logIntent:t=>{console.log("<< NLU intent: "+t.nluData.intent.name)}}}),L=t=>{switch(!0){case t.state.matches({asrtts:"recognising"}):return Object(C.jsx)("button",Object(o.a)(Object(o.a)({type:"button",className:"glow-on-hover",style:{animation:"glowing 20s linear"}},t),{},{children:"Listening..."}));case t.state.matches({asrtts:"speaking"}):return Object(C.jsx)("button",Object(o.a)(Object(o.a)({type:"button",className:"glow-on-hover",style:{animation:"bordering 1s infinite"}},t),{},{children:"Speaking..."}));default:return Object(C.jsx)("button",Object(o.a)(Object(o.a)({type:"button",className:"glow-on-hover"},t),{},{children:"Train Info"}))}};function k(){const t=Object(j.useSpeechSynthesis)({onEnd:()=>{g("ENDSPEECH")}}),e=t.speak,i=t.cancel,o=(t.speaking,Object(j.useSpeechRecognition)({onResult:t=>{g({type:"ASRRESULT",value:t})}})),a=o.listen,r=(o.listening,o.stop),m=Object(s.b)(N,{devTools:!0,actions:{recStart:Object(s.a)((()=>{console.log("Ready to receive a input."),a({interimResults:!1,continuous:!0,lang:"sv-SE"})})),recStop:Object(s.a)((()=>{console.log("Recognition stopped."),r()})),ttsStart:Object(s.a)(((t,i)=>{console.log("Speaking..."),e({text:t.ttsAgenda,lang:"en-US"})})),ttsCancel:Object(s.a)(((t,e)=>{console.log("TTS STOP..."),i()}))}}),u=Object(n.a)(m,3),c=u[0],g=u[1];u[2];return Object(C.jsx)("div",{className:"App",children:Object(C.jsx)(L,{state:c,onClick:()=>g("CLICK")})})}const D=document.getElementById("root");a.render(Object(C.jsx)(k,{}),D)},9:function(t,e,i){"use strict";function n(t){this.$root=t,this.VOID=[r([])],this.NULL=[],this.GARBAGE=[],this.$check=function(){for(var t in this)if("$root"!==t&&"$check"!==t)try{d(this[t])}catch(e){l("When checking grammar rule '"+t+"'",e)}}}function o(t){return new s(t)}function a(t){return new u(t)}function r(t){return new c(t)}function m(t,e,i){return new g(t,e,i)}function s(t){this.content=t,this._string="$"+t,this.toString=function(){return this._string}}function u(t){this.content=t,this._string="{"+t+"}",this.toString=function(){return this._string}}function c(t){this.content=t,this._string="("+t.join("|")+")",this.toString=function(){return this._string}}function g(t,e,i){this.min=t,this.max=e,this.content=i,this._string=this.content+"<"+this.min+"-"+(this.max==1/0?"":this.max)+">",this.toString=function(){return this._string}}function l(t,e){throw void 0==e?TypeError(t):TypeError(t+"; "+e.message)}function d(t){try{for(var e in t.constructor!==Array&&l("Expected Array, found "+t.constructor.name),t)t[e].constructor==Array?d(t[e]):t[e].constructor!=String&&t[e].checkExpansion()}catch(i){l("When checking sequence expansion",i)}}i.d(e,"a",(function(){return n})),i.d(e,"d",(function(){return o})),i.d(e,"h",(function(){return a})),i.d(e,"b",(function(){return r})),i.d(e,"f",(function(){return m})),i.d(e,"e",(function(){return s})),i.d(e,"i",(function(){return u})),i.d(e,"c",(function(){return c})),i.d(e,"g",(function(){return g})),s.prototype.checkExpansion=function(){this.content.constructor!==String&&l("When checking Ref content; Expected String, found "+this.content.constructor.name)},u.prototype.checkExpansion=function(){this.content.constructor!==String&&l("When checking Tag content; Expected String, found "+this.content.constructor.name)},c.prototype.checkExpansion=function(){try{for(var t in this.content.constructor!==Array&&l("Expected Array, found "+this.content.constructor.name),this.content)d(this.content[t])}catch(e){l("When checking OneOf content",e)}},g.prototype.checkExpansion=function(){try{this.min.constructor===Number&&this.max.constructor===Number||l("Expected min/max to be Number, found "+this.min.constructor.name+"/"+this.max.constructor.name),0<=this.min&&this.min<=this.max||l("Expected 0 <= min <= max, found "+this.min+"/"+this.max),d(this.content)}catch(t){l("When checking Repeat content",t)}}}},[[42,1,2]]]);
//# sourceMappingURL=main.c71e50a5.chunk.js.map